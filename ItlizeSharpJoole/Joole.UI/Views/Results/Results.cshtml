@model Joole.UI.Models.ResultsVM
@{
    ViewBag.Title = "Results";
}

@{
    Layout = "~/Views/Shared/Layout2.cshtml";
}


<div style="background-image: linear-gradient(#7e7ed0, white)" class="row">
    @{ Html.RenderPartial("_SearchBar"); }
</div>
<div class="row">

    <div style="background: #80808026; border: 1px solid #80808026; padding: 10px;" class="col-lg-3">
        <div class="row">
            <div class="col-lg-2"><p>Search:</p></div>
            <div class="col-lg-5"><button type="button" onclick="sendValues()" class="btn-primary" style="width: 100%;">Save</button></div>
            <div class="col-lg-5"><button onclick="clearData()" class="btn-primary" style="width: 100%;">Clear</button></div>
        </div>
        <div>

        </div>
        <br />
        <div class="row">
            <div style="padding-right: 0px;" class="col-lg-3"><p>Model Year</p></div>
            <div class="col-lg-9 text-center">
                <div class="col-lg-4"><input id="year1" style="width:60px;" type="text" /></div>
                <div class="col-lg-1"><p>-</p></div>
                <div class="col-lg-4"><input id="year2" style="width:60px;" type="text" /></div>
            </div>
        </div><br />
        <div>
            <button style="width: 100%;" class="btn btn-primary" type="button">
                Technical Specifications
                <span class="caret"></span>
            </button>
        </div>
        <br />
        <div id="techSpecs">
            @if (@Model != null)
            {
                for (int i = 0; i < @Model.SpecList.Count; i++)
                {
                    <p>@Model.SpecList[i]</p>
                    <input id="name_@i" type="hidden" value="@Model.SpecList[i]" />
                    <input id="min_@i" type="hidden" value="@Model.SpecFilterList[i].MinValue" />
                    <input id="a_@i" style="display:inline-block; width: 10%" type="text" readonly>
                    <div id="@i" style="width: 75%;display:inline-block;"></div>
                    <input id="b_@i" style="display:inline-block; width: 10%" type="text" readonly>
                    <input id="max_@i" type="hidden" value="@Model.SpecFilterList[i].MaxValue" />
                }
            }
        </div>
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/Content/css")

    <div style="" class="col-lg-9">
        @if (@Model != null)
        {
            <h4 style="display:inline-block"><strong>@Model.Category</strong></h4><h5 style="display:inline-block; padding: 0">&ensp;>&ensp;</h5><h4 style="display:inline-block; padding: 0">@Model.SubCategory</h4><button onclick="compare()" style="display: inline-block; float: right;">Compare</button>

            <div class="row">
                @foreach (var item in Model.Products)
                {
                    if (!(Model.isFiltered))
                    {
                        <div class="col-lg-4 text-center table-bordered">
                            <img onclick="showDetails(this.id)" id="prod_@item.ProductID" style="width: 50%; height: 50%; cursor: pointer;" src="~/Content/Images/@item.ProductImage" />
                            <h4>@item.ProductName</h4>
                            <h4>@item.Series</h4>
                            <h4>@item.SeriesInfo</h4>
                            <h4>@item.ModelYear</h4>
                            <label>Compare: </label><input type="checkbox" name="prod" id="check_@item.ProductID" />
                            <br />
                            @for (int i = 0; i < @Model.IndividualSpecs.Count; i++)
                            {
                                if (item.ProductID == @Model.IndividualSpecs[i].ProductID)
                                {
                                    <h5>@Model.IndividualSpecs[i].PropertyName</h5>
                                    <h5>@Model.IndividualSpecs[i].iValue</h5>
                                    <input id="p_@i" type="hidden" value="@Model.IndividualSpecs[i].PropertyName" />
                                }
                            }
                        </div>
                    }
                    else
                    {

                        if (item.ModelYear >= Model.Year1 && item.ModelYear <= Model.Year2)
                        {
                            <div id="prod_@item.ProductID" class="col-lg-4 text-center table-bordered">
                                <img onclick="showDetails(this.id)" id="prod_@item.ProductID" style="width: 50%;  cursor: pointer; height: 50%;" src="~/Content/Images/@item.ProductImage" />
                                <h4>@item.ProductName</h4>
                                <h4>@item.Series</h4>
                                <h4>@item.SeriesInfo</h4>
                                <h4>@item.ModelYear</h4>
                                <label>Compare: </label><input type="checkbox" name="prod" id="check_@item.ProductID" />
                                <br />

                                @for (int i = 0; i < @Model.IndividualSpecs.Count; i++)
                                {
                                    string s1 = Model.IndividualSpecs[i].PropertyName + "Min";
                                    string s2 = Model.IndividualSpecs[i].PropertyName + "Max";

                                    if (item.ProductID == @Model.IndividualSpecs[i].ProductID && Model.IndividualSpecs[i].iValue >= Convert.ToInt32(ViewData[s1]) && Model.IndividualSpecs[i].iValue <= Convert.ToInt32(ViewData[s2]))
                                    {
                                        <h5>@Model.IndividualSpecs[i].PropertyName</h5>
                                        <h5>@Model.IndividualSpecs[i].iValue</h5>
                                        <input id="p_@i" type="hidden" value="@Model.IndividualSpecs[i].PropertyName" />
                                    }
                                    else
                                    {
                                        if (item.ProductID == @Model.IndividualSpecs[i].ProductID && (Model.IndividualSpecs[i].iValue < Convert.ToInt32(ViewData[s1]) || Model.IndividualSpecs[i].iValue > Convert.ToInt32(ViewData[s2])))
                                        {
                                            //break;
                                            <script>
                                                if (document.getElementById("prod_" + @item.ProductID) != null) {
                                                    document.getElementById("prod_" + @item.ProductID).outerHTML = "";
                                                }
                                                //break;
                                            </script>
                                        }
                                    }
                                }
                            </div>
                        }

                    }
                }
            </div>
        }
    </div>
</div>

@if (@Model != null)
{
    <script>

        $(document).ready(function () {
            $(function () {
                for (var i = 0; i < @Model.SpecFilterList.Count; i++) {
                    createSlider(i);
                }
            });
        });
        //var sliderArray = [];

        reFillInputs();

        function createSlider(i) {
            $("#" + i).slider({
                range: true,
                min: parseInt($('#min_' + i).val()),
                max: parseInt($('#max_' + i).val()),
                values: [(1/4) * parseInt($('#max_' + i).val()), (3/4) * parseInt($('#max_' + i).val())],
                slide: function (event, ui) {
                    $("#a_" + i).val(ui.values[0]);
                    $("#b_" + i).val(ui.values[1]);
                }
            });
            $("#a_" + i).val($("#" + i).slider("values", 0));
            $("#b_" + i).val($("#" + i).slider("values", 1));
        }

        function sendValues() {
            var year1 = $('#year1').val();
            var year2 = $('#year2').val();
            var values = {};

            for (var i = 0; i < @Model.SpecFilterList.Count; i++) {
                values[$('#name_' + i).val()] = $('#a_' + i).val().toString() + '-' + $('#b_' + i).val().toString();

                //sliderArray.push($('#a_' + i).val());
                //sliderArray.push($('#b_' + i).val());
            }
            //window.localStorage.setItem('slidervalues', JSON.stringify(sliderArray));

            $.ajax({
                url: '/Results/GetProducts/',
                data: { Year1: year1.toString(), Year2: year2.toString(), filter: JSON.stringify(values), subid: @Model.SubCategoryID.ToString() },
                type: "POST",
                dataType: "JSON",

                success: function (data) {
                    window.location.href = data.url;
                }
            })

        }

        function clearData() {

            $('#year1').val('');
            $('#year2').val('');
            for (var i = 0; i < @Model.SpecFilterList.Count; i++) {
                createSlider(i);
            }
        }

        function showDetails(id) {
            var prodid = id.substr(5);
            //alert(prodid);

            $.ajax({
                url: '/Product/getProductID/',
                data: { prodid: prodid },
                type: "POST",
                dataType: "JSON",

                success: function (data) {
                    window.location.href = data.url;
                }
            })

        }

        function compare() {
            var arr = [];
            $.each($("input[name='prod']:checked"), function () {
                var prodid = ($(this).attr('id')).substr(6);
                arr.push(prodid);
            });

            //alert(arr.toString());

             $.ajax({
                url: '/Product/Compare/',
                data: {prod1: arr[0], prod2: arr[1]},
                type: "POST",
                dataType: "JSON",

                success: function (data) {
                    window.location.href = data.url;
                }
            })

        }

        function reFillInputs() {
            if ("@Model.isFiltered") {
                if (@Model.Year1 != "0") $('#year1').val("@Model.Year1");
                if (@Model.Year2 != "0") $('#year2').val("@Model.Year2");

                $('#selectedCategory').val("@Model.Category");
                $('#subCategoryText').val("@Model.SubCategory");

                /*
                let sliderArrayValues = JSON.parse(window.localStorage.getItem("slidervalues"));
                alert(sliderArrayValues);
                var i = 0;
                var tracker = 0;
                while (i < Model.SpecFilterList.Count) {
                    $('#' + i).slider('values', sliderArrayValues[tracker], sliderArrayValues[tracker++]);

                    tracker++;
                    i++;
                }
                */
            }
            else {
                $('#selectedCategory').val("@Model.Category");
                $('#subCategoryText').val("@Model.SubCategory");
            }
        }
    </script>
}